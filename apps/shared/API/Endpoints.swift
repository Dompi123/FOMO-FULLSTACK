// Generated by generate-api-contracts.swift
// Do not edit directly

import Foundation

public enum APIEndpoint {
    // Venue Endpoints (10)
    case getVenues
    case getVenue(venueId: String)
    case searchVenues(query: String)
    case getVenueDetails(venueId: String)
    case getVenuePhotos(venueId: String)
    case getVenueReviews(venueId: String)
    case getVenueEvents(venueId: String)
    case getVenueCapacity(venueId: String)
    case getVenueWaitTime(venueId: String)
    case getVenueHours(venueId: String)
    
    // Drink Endpoints (8)
    case getDrinks(venueId: String)
    case getDrink(venueId: String, drinkId: String)
    case getDrinkCategories(venueId: String)
    case getDrinksByCategory(venueId: String, category: String)
    case getDrinkReviews(venueId: String, drinkId: String)
    case getDrinkAvailability(venueId: String, drinkId: String)
    case getDrinkPricing(venueId: String, drinkId: String)
    case searchDrinks(venueId: String, query: String)
    
    // Pass Endpoints (8)
    case getPasses
    case getPass(passId: String)
    case purchasePass(venueId: String)
    case getPassTypes(venueId: String)
    case getPassPricing(venueId: String, passType: String)
    case getPassValidity(passId: String)
    case getPassHistory(userId: String)
    case transferPass(passId: String, toUserId: String)
    
    // Order Endpoints (8)
    case placeOrder(venueId: String, drinkIds: [String])
    case getOrder(orderId: String)
    case getOrderStatus(orderId: String)
    case cancelOrder(orderId: String)
    case getOrderHistory(userId: String)
    case updateOrder(orderId: String, items: [String])
    case getActiveOrders(userId: String)
    case rateOrder(orderId: String, rating: Int)
    
    // Profile Endpoints (8)
    case profile
    case updateProfile(name: String, email: String, phoneNumber: String?)
    case getProfilePreferences
    case updateProfilePreferences(preferences: [String: Any])
    case getPaymentMethods
    case addPaymentMethod(token: String)
    case removePaymentMethod(methodId: String)
    case getProfileAnalytics
    
    public var path: String {
        switch self {
        // Venue paths
        case .getVenues: return "/venues"
        case .getVenue(let vid): return "/venues/\(vid)"
        case .searchVenues: return "/venues/search"
        case .getVenueDetails(let vid): return "/venues/\(vid)/details"
        case .getVenuePhotos(let vid): return "/venues/\(vid)/photos"
        case .getVenueReviews(let vid): return "/venues/\(vid)/reviews"
        case .getVenueEvents(let vid): return "/venues/\(vid)/events"
        case .getVenueCapacity(let vid): return "/venues/\(vid)/capacity"
        case .getVenueWaitTime(let vid): return "/venues/\(vid)/wait-time"
        case .getVenueHours(let vid): return "/venues/\(vid)/hours"
        
        // Drink paths
        case .getDrinks(let vid): return "/venues/\(vid)/drinks"
        case .getDrink(let vid, let did): return "/venues/\(vid)/drinks/\(did)"
        case .getDrinkCategories(let vid): return "/venues/\(vid)/drinks/categories"
        case .getDrinksByCategory(let vid, let cat): return "/venues/\(vid)/drinks/category/\(cat)"
        case .getDrinkReviews(let vid, let did): return "/venues/\(vid)/drinks/\(did)/reviews"
        case .getDrinkAvailability(let vid, let did): return "/venues/\(vid)/drinks/\(did)/availability"
        case .getDrinkPricing(let vid, let did): return "/venues/\(vid)/drinks/\(did)/pricing"
        case .searchDrinks(let vid, _): return "/venues/\(vid)/drinks/search"
        
        // Pass paths
        case .getPasses: return "/passes"
        case .getPass(let pid): return "/passes/\(pid)"
        case .purchasePass(let vid): return "/venues/\(vid)/passes/purchase"
        case .getPassTypes(let vid): return "/venues/\(vid)/passes/types"
        case .getPassPricing(let vid, let type): return "/venues/\(vid)/passes/\(type)/pricing"
        case .getPassValidity(let pid): return "/passes/\(pid)/validity"
        case .getPassHistory(let uid): return "/users/\(uid)/passes/history"
        case .transferPass(let pid, _): return "/passes/\(pid)/transfer"
        
        // Order paths
        case .placeOrder(let vid, _): return "/venues/\(vid)/orders"
        case .getOrder(let oid): return "/orders/\(oid)"
        case .getOrderStatus(let oid): return "/orders/\(oid)/status"
        case .cancelOrder(let oid): return "/orders/\(oid)/cancel"
        case .getOrderHistory(let uid): return "/users/\(uid)/orders"
        case .updateOrder(let oid, _): return "/orders/\(oid)"
        case .getActiveOrders(let uid): return "/users/\(uid)/orders/active"
        case .rateOrder(let oid, _): return "/orders/\(oid)/rate"
        
        // Profile paths
        case .profile: return "/profile"
        case .updateProfile: return "/profile/update"
        case .getProfilePreferences: return "/profile/preferences"
        case .updateProfilePreferences: return "/profile/preferences/update"
        case .getPaymentMethods: return "/profile/payment-methods"
        case .addPaymentMethod: return "/profile/payment-methods/add"
        case .removePaymentMethod(let mid): return "/profile/payment-methods/\(mid)"
        case .getProfileAnalytics: return "/profile/analytics"
        }
    }
    
    public var method: String {
        switch self {
        case .getVenues, .getVenue, .searchVenues, .getVenueDetails, .getVenuePhotos,
             .getVenueReviews, .getVenueEvents, .getVenueCapacity, .getVenueWaitTime,
             .getVenueHours, .getDrinks, .getDrink, .getDrinkCategories,
             .getDrinksByCategory, .getDrinkReviews, .getDrinkAvailability,
             .getDrinkPricing, .searchDrinks, .getPasses, .getPass, .getPassTypes,
             .getPassPricing, .getPassValidity, .getPassHistory, .getOrder,
             .getOrderStatus, .getOrderHistory, .getActiveOrders, .profile,
             .getProfilePreferences, .getPaymentMethods, .getProfileAnalytics:
            return "GET"
            
        case .purchasePass, .placeOrder, .updateOrder, .rateOrder,
             .updateProfile, .updateProfilePreferences, .addPaymentMethod:
            return "POST"
            
        case .transferPass:
            return "PUT"
            
        case .cancelOrder, .removePaymentMethod:
            return "DELETE"
        }
    }
}